{
    "personalInfo": {
        "names": {
            "first": "Konstantin",
            "middle": "Simeonov",
            "last": "Simeonov"
        },
        "title": "Software dev and haskell/linux hobbyist",
        "photoUrl": "target/web/public/main/konche-bonche.jpg",
        "aboutMe": "Located in Sofia, Bulgaria, currently busy with mentoring 2 people, creating challenges for geektastic.com and reading the Designing Data Intensive Applications book.",
        "contacts": [
            {
                "content": "https://www.hackerrank.com/kon_trombon",
                "iconUrl": "target/web/public/main/hackerrank.png",
                "urlType": "url"
            },
            {
                "content": "+359 885 032 502",
                "iconUrl": "target/web/public/main/phone-icon.png",
                "urlType": "phone"
            },
            {
                "content": "https://github.com/KonstantinSimeonov",
                "iconUrl": "target/web/public/main/github-icon.png",
                "urlType": "url"
            },
            {
                "content": "kon.simeonov@protonmail.com",
                "iconUrl": "target/web/public/main/email-icon.png",
                "urlType": "email"
            }
        ]
    },
    "workExperience": [
        {
            "from": "December 2015",
            "to": "January 2017",
            "jobTitle": "Technical Trainer",
            "location": "Telerik Academy",
            "descriptions": [
                "Delivered lectures that reached more than 2000 students and helped them create their first web applications and dive into web development with C#, HTML, CSS and JavaScript",
                "Experienced firsthand how important keeping deadlines is, became better at taking responsibilities and honed organizational skills"
            ]
        },
        {
            "from": "April 2017",
            "to": "July 2019",
            "jobTitle": "JavaScript Developer",
            "location": "Chaosgroup",
            "descriptions": [
                "Worked on V-Ray for Sketchup/Rhino/Revit, which provides a cross-platform UI for interacting with V-Ray",
                "Built dynamic user interfaces using Electron, React, Typescript, Mobx and Redux",
                "Set up unit and e2e test environments with Mocha/Ava/Jest, implemented builds with Webpack, Gitlab/Jenkins CI/CD for apps and libraries"
            ]
        },
        {
            "from": "July 2019",
            "to": "January 2020",
            "jobTitle": "Scala Developer",
            "location": "Pontica Solutions Ltd",
            "descriptions": [
                "Scheduled emails leveraging Akka and Apache Kafka",
                "Implemented email statistics using Apache Spark and Apache Kafka",
                "Ensured code correctness by combining functional programming and automated testing with ScalaTest and ScalaCheck"
            ]
        },
        {
            "from": "January 2020",
            "to": "March 2022",
            "jobTitle": "Software Developer",
            "location": "Coursera",
            "descriptions": [
                "Developed rhyme.com, interactive studying VM environment directly in their browser, complete with audio/video calls, video instructions and remote desktop connections",
                "Explored typescript and applied functional programming concepts in a react web app",
                "Reduced complexity/improved stability with property-based testing, publishing typescript definitions for untyped libraries, setting up code coverage and automated dependency updates, simplifying the build processes"
            ]
        },
        {
            "from": "March 2022",
            "to": "November 2022",
            "jobTitle": "Full-Stack Developer",
            "location": "Synthesis",
            "descriptions": [
                "Worked on portal.synthesis.is with nextjs, typeorm, mysql, zod and react-query",
                "Optimized typeorm/mysql queries, modified indexes and constraints, migrated table schemas to improve performance and maintainability",
                "Sped up CI runtime from 13 down to 3 mins using github action sharding, parallel db testing and job splitting",
                "Helped improve app security by enforcing authorization through strong typing and introduced zod to help maintain data integrity"
            ]
        }
    ],
    "languages": [
        {
            "languageName": "English",
            "level": "Proficient"
        },
        {
            "languageName": "German",
            "level": "Advanced"
        }
    ],
    "educations": [
        {
            "educationTitle": "Web Development",
            "location": "Telerik Academy",
            "from": "January 2015",
            "to": "March 2016",
            "certificateUrl": ["https://telerikacademy.com/Certificates/View/1980/6b7b6f44"],
            "linkText": ["telerikacademy.com/1980/6b7b6f44"]
        },
        {
            "educationTitle": "Bachelor in Software Engineering (not completed)",
            "location": "FMI, Sofia University 'St. Kliment Ohridski'",
            "from": "October 2013",
            "to": "January 2015"
        }
    ],
    "projects": [
        {
            "title": "AoC 2022",
            "description": "How I fell in love with Rust while blasting some algorithms (Advent of Code 2022 solutions).",
            "links": [
                {
                    "url": "https://github.com/KonstantinSimeonov/aoc2o22"
                }
            ],
            "priority": 20
        },
        {
            "title": "tsx-control-statements",
            "description": "Typescript compiler plugin that adds control flow elements to jsx.",
            "links": [
                {
                    "url": "https://github.com/KonstantinSimeonov/tsx-control-statements"
                }
            ],
            "priority": 5
        },
        {
            "title": "tsfck",
            "description": "Pure compile-time implementation of various fun programs (fibs, primes, string ops) using typescript type language. Not a single line of runtime code! Apparently that's what happens when you read too much of Aphyr's blogs.",
            "links": [
                {
                    "url": "https://github.com/KonstantinSimeonov/tsfck"
                }
            ],
            "priority": 15
        },
        {
            "title": "guacamole-client typedefs",
            "description": "Typescript library definitions for apache guacamole-client library which is used at Coursera.",
            "links": [
                {
                    "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45949"
                }
            ],
            "priority": 10
        }
    ],
    "strengths": [
        {
            "name": "Curiosity",
            "description": "From algorithms to UX to how the product I'm building fits the market, curiosity has always driven me to understand every aspect of the product I'm working on and apply that understanding to my work.",
            "iconUrl": "target/web/public/main/learning-icon.png"
        },
        {
            "name": "Hollistic Ownership",
            "description": "Participating in different stages of a features lifecycle (requirements gathering, design, development, testing, monitoring, documentation) is a way for me to better engage with the product, show off my craftsmanship and help drive the product forward.",
            "iconUrl": "target/web/public/main/heart-icon.png"
        }
    ],
    "skills": [
        {
            "name": "Algorithms",
            "description": "Stuff",
            "priority": 6
        },
        {
            "name": "Javascript/Typescript",
            "description": "I've used Javascript and Typescript in my jobs as a technical trainer at TelerikAcademy, dev at ChaosGroup and Rhyme teams to build interactive user interfaces, single page applications, automate build and tests processes.",
            "priority": 2
        },
        {
            "name": "NodeJS",
            "description": "NodeJS is one of the main reasons I love doing JavaScript! I've passed a course at Telerik Academy and I've been using it for many different purposes ever since - <strong>working with files, web crawling, creating RESTful APIs or web applications that do server-side rendering, doing small scripts to automate tasks</strong>. In the process I also became familiar with <strong>asynchronous programming</strong>, as well as tools of the JavaScript ecosystem such as <strong>npm and yarn</strong> and practices like <strong>testing, automated build processes, continuous integration and deployment.</strong> The thing I love most about Node is that it has a super rich system of libraries and allows developers to quickly get a prototype working.",
            "priority": 1
        },
        {
            "name": "Mentoring",
            "description": "Mentoring is a natural part of working in a team - I had the opportunity to mentor a lot of students during my stint as a teacher in TelerikAcademy and that helped me successfully mentor fresh team members in Coursera and Synthesis. I'm also mentoring several people outside of work - check out <a>https://latrovaliev.dev/</a>, he's my best student!",
            "priority": 4
        },
        {
            "name": "Functional programming",
            "description": "FP can provide amazing benefits (immutability, pure functions, abstraction via monads/functions/composition) in the right circumstances - I've had a blast leveraging the strong sides of FP with Haskell/Typescript/Scala in a variety of situations like automation, restful APIs, front-end development and testing."
        },
        {
            "name": "Linux & bash",
            "description": "I've used <strong>Fedora</strong>, <strong>Gentoo</strong> and later <strong>Arch linux distributions</strong> since my first year as a developer. I've been using <strong>bash</strong> features, such as loops, pipes, streams and command line tools like grep, cat, sed, rsync, ssh, less and other to automate and simplify tasks ever since. I love the increase in productivity which bash bring for me!"
        },
        {
            "name": "SQL",
            "description": "Building projects like editable video transcriptions (Coursera), 3d material library store (ChaosGroup), student system with different user roles (Synthesis), user search (Synthesis), event scheduling (Synthesis) made me appreciate how powerful and fun, but also sometimes frustrating and complex relational databases/SQL can be."
        },
        {
            "name": "React",
            "description": "I've been using React for 7 (at TelerikAcademy, ChaosGroup, Coursera, Synthesis) years and I love what it offers - reusable components/hooks, terse and declarative code, comprehensible UI state management and reasonable performance. Of course it has it's bad sides, but before using React I've never had so much fun building user intefaces :)",
            "priority": -1
        },
        {
            "name": "git",
            "description": "I started using <strong>git</strong> since day one of doing programming - many of the materials I learned from and all the projects I contributed to were either hosted on GitHub or GitLab servers, which had me using git while studying and working. This in turn helped me understand the concept of <strong>distributed source control</strong> and get comfortable with <strong>branches, merging, rebasing and navigating repository history.</strong>"
        },
        {
            "name": "OOP",
            "description": "In the course of studying and working with <strong>C#, ASP.NET</strong>, <string>JavaScript</strong> and <strong>Scala</strong> I had contact with diverse object-oriented features, such as class and prototypal inheritance, interfacing, object composition, abstraction, polymorphism and encapsulation. Also, while learning and using object-oriented programming, I became familiar with <strong>design patterns</strong> such as decorators, chain of responsibility, command pattern, composite objects, factories and mediators. Those techniques helped me better understand how to write more <strong>maintainable, flexible, testable and reusable code</strong>.",
            "priority": 9
        }
    ]
}
