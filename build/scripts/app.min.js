"use strict";var _slicedToArray=function(){function e(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),templates=function(){var e=Object.create(null);return{get:function(t){return t in e?Promise.resolve(e[t]):new Promise(function(n,r){$.ajax({method:"GET",url:"/templates/"+t+".handlebars",success:function(r){e[t]=Handlebars.compile(r),n(e[t])},error:r})})}}}();$(function(){Handlebars.registerHelper("ifEqual",function(e,t,n){return console.log(e,t,this),e===t?n.fn(this):n.inverse(this)})});var data=function(){var e=null;return{get:function(){return e?Promise.resolve(e):new Promise(function(t,n){$.ajax({method:"GET",url:"/data/data.json",contentType:"application/json",success:function(n){e=n,t(e)},error:n})})}}}();$(function(){Promise.all([templates.get("skills"),templates.get("work-experience"),templates.get("personal-info"),data.get()]).then(function(e){var t=_slicedToArray(e,4),n=t[0],r=t[1],o=t[2],i=t[3];console.log(i),$(".skills-section").html(n(i)),$(".work-expirience-section").html(r(i)),$(".personal-info-panel").html(o(i.personalInfo))}).catch(function(e){return console.log(e)})});